<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Armur</title>
    <link>http://localhost:1313/blogs/tags/security/</link>
    <description>Recent content in Security on Armur</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 31 May 2024 09:00:00 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/blogs/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Critical Vulnerability found in the ‘net’ package in Go and Rust.</title>
      <link>http://localhost:1313/blogs/posts/critical_vulnerability_found_in_the_net_package/</link>
      <pubDate>Fri, 31 May 2024 09:00:00 +0300</pubDate>
      <guid>http://localhost:1313/blogs/posts/critical_vulnerability_found_in_the_net_package/</guid>
      <description>The popular ‘net’ library used in GO and Rust was recently impacted by the mixed-format IP address validation vulnerability, a critical bug that made many applications extremely vulnerable. In this article, we will break it down and understand all about it.&#xA;Understanding the Vulnerability If you perform a simple search for &amp;ldquo;import net&amp;rdquo; on GitHub, it’ll reveal over 4 million files for Go alone relying on the net library, this means it’s a vulnerability of significant proportions.</description>
    </item>
    <item>
      <title>A Security Vulnerability In Rust&#39;s Cargo Tool</title>
      <link>http://localhost:1313/blogs/posts/a_security_vulnerability_in_rusts_cargo_tool/</link>
      <pubDate>Sun, 26 May 2024 18:31:22 +0530</pubDate>
      <guid>http://localhost:1313/blogs/posts/a_security_vulnerability_in_rusts_cargo_tool/</guid>
      <description>Introduction The tools we use to develop software should be secure and it is crucial to ensure that. Recently, a security vulnerability was found that surfaced in Rust&amp;rsquo;s Cargo tool. If you’re not familiar, Cargo is an essential tool for managing Rust projects.&#xA;It handles tasks like building code and managing dependencies. However, a significant flaw was discovered in this tool. This vulnerability is tied to the way Cargo generates reports with the cargo build &amp;ndash;timings command.</description>
    </item>
    <item>
      <title>Revolutionizing Cloud Security Posture Management with AI</title>
      <link>http://localhost:1313/blogs/posts/how_ai_is_revolutionizing_cybersecurity/</link>
      <pubDate>Fri, 02 Feb 2024 18:31:22 +0530</pubDate>
      <guid>http://localhost:1313/blogs/posts/how_ai_is_revolutionizing_cybersecurity/</guid>
      <description>Introduction In the digital age, where cyber threats loom larger and more sophisticated with each passing day, the quest for robust cybersecurity measures has never been more critical. Picture this: a world where cybersecurity defenses not only react to threats but anticipate them, adapt to them, and neutralize them almost instantaneously. Welcome to 2024, where artificial intelligence (AI) is no longer just a buzzword but the backbone of cutting-edge cybersecurity strategies.</description>
    </item>
    <item>
      <title>Best Practices for Securing Smart Contracts</title>
      <link>http://localhost:1313/blogs/posts/best_practices_for_securing_smart/</link>
      <pubDate>Mon, 18 Dec 2023 15:01:35 +0300</pubDate>
      <guid>http://localhost:1313/blogs/posts/best_practices_for_securing_smart/</guid>
      <description>Introduction In the fascinating world of blockchain technology, smart contracts are akin to the wizards of automation, casting spells that execute transactions and agreements seamlessly, without the need for intermediaries. These digital contracts run on blockchain networks, self-executing when predetermined conditions are met, revolutionizing how agreements are formed and upheld in the digital age. From creating decentralized applications (dApps) to automating complex financial instruments, smart contracts are at the heart of blockchain&amp;rsquo;s promise for a more transparent, efficient, and secure digital future.</description>
    </item>
    <item>
      <title>Crafting Your First Secure Smart Contract in Solidity A Beginner’s Guide</title>
      <link>http://localhost:1313/blogs/posts/crafting_your_first_secure_smart_contract_in_solidity_a_beginners_guide/</link>
      <pubDate>Mon, 18 Dec 2023 15:01:35 +0300</pubDate>
      <guid>http://localhost:1313/blogs/posts/crafting_your_first_secure_smart_contract_in_solidity_a_beginners_guide/</guid>
      <description>Introduction Imagine a world where agreements and transactions happen seamlessly without the need for a middleman, where trust is built into the system, and where your digital assets are securely managed by code. Welcome to the revolutionary world of smart contracts! These aren&amp;rsquo;t your average contracts written on paper but are smart, digital, and automated contracts that live on the blockchain. And when it comes to these digital marvels, security isn&amp;rsquo;t just a feature; it&amp;rsquo;s the cornerstone.</description>
    </item>
  </channel>
</rss>
