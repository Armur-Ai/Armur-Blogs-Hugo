<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vulnerability on Armur</title>
    <link>https://armur.ai/blogs/tags/vulnerability/</link>
    <description>Recent content in Vulnerability on Armur</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jun 2024 18:00:00 +0530</lastBuildDate>
    <atom:link href="https://armur.ai/blogs/tags/vulnerability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Critical Vulnerability In Windows Batch file Execution</title>
      <link>https://armur.ai/blogs/posts/windows_batch_file_vulnerability/</link>
      <pubDate>Sat, 01 Jun 2024 18:00:00 +0530</pubDate>
      <guid>https://armur.ai/blogs/posts/windows_batch_file_vulnerability/</guid>
      <description>A command injection flaw was found in Rust, exclusive to Windows environments. When invoking batch files on Windows using the Command API, Rust explicitly uses cmd.exe which has complicated parsing rules for arguments. If an attacker can control part of the command arguments of the batch file, this could bypass the argument escaping and inject arbitrary shell commands.&#xA;An overview of the vulnerability This issue arises when invoking batch files (with .</description>
    </item>
    <item>
      <title>Critical Vulnerability found in the ‘net’ package in Go and Rust.</title>
      <link>https://armur.ai/blogs/posts/critical_vulnerability_found_in_the_net_package/</link>
      <pubDate>Fri, 31 May 2024 09:00:00 +0300</pubDate>
      <guid>https://armur.ai/blogs/posts/critical_vulnerability_found_in_the_net_package/</guid>
      <description>The popular ‘net’ library used in GO and Rust was recently impacted by the mixed-format IP address validation vulnerability, a critical bug that made many applications extremely vulnerable. In this article, we will break it down and understand all about it.&#xA;Understanding the Vulnerability If you perform a simple search for &amp;ldquo;import net&amp;rdquo; on GitHub, it’ll reveal over 4 million files for Go alone relying on the net library, this means it’s a vulnerability of significant proportions.</description>
    </item>
    <item>
      <title>A Security Vulnerability In Rust&#39;s Cargo Tool</title>
      <link>https://armur.ai/blogs/posts/a_security_vulnerability_in_rusts_cargo_tool/</link>
      <pubDate>Sun, 26 May 2024 18:31:22 +0530</pubDate>
      <guid>https://armur.ai/blogs/posts/a_security_vulnerability_in_rusts_cargo_tool/</guid>
      <description>Introduction The tools we use to develop software should be secure and it is crucial to ensure that. Recently, a security vulnerability was found that surfaced in Rust&amp;rsquo;s Cargo tool. If you’re not familiar, Cargo is an essential tool for managing Rust projects.&#xA;It handles tasks like building code and managing dependencies. However, a significant flaw was discovered in this tool. This vulnerability is tied to the way Cargo generates reports with the cargo build &amp;ndash;timings command.</description>
    </item>
  </channel>
</rss>
