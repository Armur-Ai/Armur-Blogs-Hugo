<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vulnerability on Armur</title>
    <link>http://localhost:1313/blogs/tags/vulnerability/</link>
    <description>Recent content in Vulnerability on Armur</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Aug 2024 09:00:00 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/blogs/tags/vulnerability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What Are Code Vulnerability Scanning Tools?</title>
      <link>http://localhost:1313/blogs/posts/what_are_code_vulnerability_scanning_tools/</link>
      <pubDate>Fri, 23 Aug 2024 09:00:00 +0530</pubDate>
      <guid>http://localhost:1313/blogs/posts/what_are_code_vulnerability_scanning_tools/</guid>
      <description>In today’s digital landscape, security is important. As organisations increasingly rely on software to drive their operations, the risk of cyberattacks has grown. Code vulnerability scanning tools have become essential in the fight to protect sensitive data, maintain operational integrity, and safeguard against breaches. This article explains what code vulnerability scanning tools are, how they work, their importance, and the key features that make them important in modern software development and security.</description>
    </item>
    <item>
      <title>The Top 10 Web Application Security Risks: A Detailed Guide for Industry Leaders</title>
      <link>http://localhost:1313/blogs/posts/top_ten_web_application_security_risks/</link>
      <pubDate>Wed, 14 Aug 2024 16:30:22 +0530</pubDate>
      <guid>http://localhost:1313/blogs/posts/top_ten_web_application_security_risks/</guid>
      <description>Introduction In the rapidly evolving digital landscape, web applications have become the backbone of modern businesses, enabling seamless interactions and transactions. However, with this increasing reliance comes heightened security risks that can jeopardize sensitive data and disrupt operations. Understanding these risks is not just important—it’s imperative for anyone responsible for the security of web applications. In this comprehensive guide, we’ll dive deep into the top 10 web application security risks that every organization should be aware of.</description>
    </item>
    <item>
      <title>A Critical Vulnerability In Windows Batch file Execution</title>
      <link>http://localhost:1313/blogs/posts/windows_batch_file_vulnerability/</link>
      <pubDate>Sat, 01 Jun 2024 18:00:00 +0530</pubDate>
      <guid>http://localhost:1313/blogs/posts/windows_batch_file_vulnerability/</guid>
      <description>A command injection flaw was found in Rust, exclusive to Windows environments. When invoking batch files on Windows using the Command API, Rust explicitly uses cmd.exe which has complicated parsing rules for arguments. If an attacker can control part of the command arguments of the batch file, this could bypass the argument escaping and inject arbitrary shell commands.&#xA;An overview of the vulnerability This issue arises when invoking batch files (with .</description>
    </item>
    <item>
      <title>Critical Vulnerability found in the ‘net’ package in Go and Rust.</title>
      <link>http://localhost:1313/blogs/posts/critical_vulnerability_found_in_the_net_package/</link>
      <pubDate>Fri, 31 May 2024 09:00:00 +0300</pubDate>
      <guid>http://localhost:1313/blogs/posts/critical_vulnerability_found_in_the_net_package/</guid>
      <description>The popular ‘net’ library used in GO and Rust was recently impacted by the mixed-format IP address validation vulnerability, a critical bug that made many applications extremely vulnerable. In this article, we will break it down and understand all about it.&#xA;Understanding the Vulnerability If you perform a simple search for &amp;ldquo;import net&amp;rdquo; on GitHub, it’ll reveal over 4 million files for Go alone relying on the net library, this means it’s a vulnerability of significant proportions.</description>
    </item>
    <item>
      <title>A Security Vulnerability In Rust&#39;s Cargo Tool</title>
      <link>http://localhost:1313/blogs/posts/a_security_vulnerability_in_rusts_cargo_tool/</link>
      <pubDate>Sun, 26 May 2024 18:31:22 +0530</pubDate>
      <guid>http://localhost:1313/blogs/posts/a_security_vulnerability_in_rusts_cargo_tool/</guid>
      <description>Introduction The tools we use to develop software should be secure and it is crucial to ensure that. Recently, a security vulnerability was found that surfaced in Rust&amp;rsquo;s Cargo tool. If you’re not familiar, Cargo is an essential tool for managing Rust projects.&#xA;It handles tasks like building code and managing dependencies. However, a significant flaw was discovered in this tool. This vulnerability is tied to the way Cargo generates reports with the cargo build &amp;ndash;timings command.</description>
    </item>
  </channel>
</rss>
